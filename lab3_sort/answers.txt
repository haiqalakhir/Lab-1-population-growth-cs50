sort1 uses: Bubble Sort

How do you know?: for sorted file, sort1 was the fastest in sorting time

random5000.txt -> 0.103s
random10000.txt -> 0.243s
random50000.txt -> 5.747s

reversed5000.txt -> s
reversed10000.txt -> s
reversed50000.txt -> 5.023s

sorted5000.txt -> s
sorted10000.txt -> s
sorted50000.txt -> 0.477s

...

sort2 uses: Merge sort

How do you know?: for random txt file 50000, it was faster than other program

random5000.txt -> 0.034s
random10000.txt -> 0.070s
random50000.txt -> 0.521s

reversed5000.txt -> s
reversed10000.txt -> s
reversed50000.txt -> 0.402s

sorted5000.txt -> s
sorted10000.txt -> s
sorted50000.txt -> 0.500s

...

sort3 uses: Selection Sort

How do you know?: slowest in both random file, and slower to sort1 in sorted file, so we can conclude that this is selection sort

random5000.txt -> 0.097s
random10000.txt -> 0.163s
random50000.txt -> 2.427s

reversed5000.txt -> s
reversed10000.txt -> s
reversed50000.txt -> 3.054s

sorted5000.txt -> s
sorted10000.txt -> s
sorted50000.txt -> 2.453s
